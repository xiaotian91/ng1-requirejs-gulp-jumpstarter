@charset "UTF-8";
//-----------------------------------------------------	
// animate scss
// 支持ie8+
//-----------------------------------------------------


// 导入依赖文件
@import "../variables";
@import "../util";


// animation
//-----------------------------------------------------
@mixin animation ($animations, $prefixes: webkit) {
  @include prefixer(animation, $animations, $prefixes);
}

@mixin animation-name ($names...) {
  @include prefixer(animation-name, $names);
}

@mixin animation-duration ($times...) {
  @include prefixer(animation-duration, $times);
}

@mixin animation-timing-function ($motions...) {
  // timing-function
  // https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function
  @include prefixer(animation-timing-function, $motions);
}

@mixin animation-delay ($times...) {
  @include prefixer(animation-delay, $times);
}

@mixin animation-iteration-count ($values...) {
  // infinite | <number>
  @if length($values) >= 1 {
    @include prefixer(animation-iteration-count, $values);
  } @else {
    @include prefixer(animation-iteration-count, infinite);
  }
}

@mixin animation-direction ($directions...) {
  // normal | alternate | reverse | alternate-reverse
  @include prefixer(animation-direction, $directions);
}

@mixin animation-fill-mode ($modes...) {
  // none | forwards | backwards | both
  @if length($modes) >= 1 {
    @include prefixer(animation-fill-mode, $modes);
  } @else {
    @include prefixer(animation-fill-mode, forwards);
  }
}

@mixin animation-play-state ($states...) {
  // running | paused
  @if length($modes) >= 1 {
    @include prefixer(animation-play-state, $states);
  } @else {
    @include prefixer(animation-play-state, paused);
  }
}

// 在各自的@if判断里面，先禁用所有的前缀，然后开启对应的前缀
// 最后输出标准的时候，直接禁用所有的前缀，开启标准
@mixin keyframes($name, $prefixes: webkit o ) {
  $originalPrefixForWebkit: $prefix-for-webkit;
  $originalPrefixForMozilla: $prefix-for-mozilla;
  $originalPrefixForMicrosoft: $prefix-for-microsoft;
  $originalPrefixForOpera: $prefix-for-opera;
  $originalPrefixNo: $prefix-no;
  
  @each $prefix in $prefixes {
    @if $prefix == webkit and $originalPrefixForWebkit == true {
      @include disable-prefix-for-all();
      $prefix-for-webkit: true !global;
      @-webkit-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == moz and $originalPrefixForMozilla == true {
      @include disable-prefix-for-all();
      $prefix-for-mozilla: true !global;
      @-moz-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == ms and $originalPrefixForMicrosoft == true {
      @include disable-prefix-for-all();
      $prefix-for-microsoft: true !global;
      @-ms-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == o and $originalPrefixForOpera == true {
      @include disable-prefix-for-all();
      $prefix-for-opera: true !global;
      @-o-keyframes #{$name} {
        @content;
      }
    }
  }

  @include disable-prefix-for-all();
  $prefix-no: true !global;
  @keyframes #{$name} {
    @content;
  }

  $prefix-for-webkit:       $originalPrefixForWebkit !global;
  $prefix-for-mozilla:      $originalPrefixForMozilla !global;
  $prefix-for-microsoft:    $originalPrefixForMicrosoft !global;
  $prefix-for-opera:        $originalPrefixForOpera !global;
  $prefix-no:              $originalPrefixNo !global;
}

// 为animate模块设计
%animated {
  @include animation-duration(1s);
  @include animation-fill-mode(both);
}


// Transform
//-----------------------------------------------------
@mixin transform($property...) {
  @include prefixer(transform, $property);
}

@mixin transform-origin($axes) {
  // x-axis - left | center | right  | length | %
  // y-axis - top  | center | bottom | length | %
  // z-axis -                          length
  @include prefixer(transform-origin, $axes);
}

@mixin transform-style ($style: preserve-3d) {
  // flat | preserve-3d
  @include prefixer(transform-style, $style);
}

// Transformations
//------------------------------------
// rotate
@mixin rotate($degrees...) {
  @include prefixer(transform, rotate($degrees));
}
@mixin rotate3D($degrees...) {
  @include prefixer(transform, rotate3D($degrees));
}
@mixin rotateX($degrees) {
  @include prefixer(transform, rotateX($degrees));
}
@mixin rotateY($degrees) {
  @include prefixer(transform, rotateY($degrees));
}
@mixin rotateZ($degrees) {
  @include prefixer(transform, rotateZ($degrees) );
}

